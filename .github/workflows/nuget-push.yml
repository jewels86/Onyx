permissions:
  contents: write  
name: Publish NuGet Package

on:
  push:
    tags:
      - '*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Extract tag info
        id: extract
        run: |
          TAG=${GITHUB_REF#refs/tags/} 
          PACKAGE_KEY=$(echo $TAG | cut -d'-' -f1)
          VERSION=$(echo $TAG | cut -d'-' -f2)  
          VERSION=${VERSION#v}   
          
          case "$PACKAGE_KEY" in
            attack) PROJECT_NAME="Onyx.Attack" ;;
            defense) PROJECT_NAME="Onyx.Defense" ;;
            shared) PROJECT_NAME="Onyx.Shared" ;;
            *) echo "Unknown package key $PACKAGE_KEY"; exit 1 ;;
          esac

          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          echo "MAJOR=$MAJOR" >> $GITHUB_ENV
          echo "MINOR=$MINOR" >> $GITHUB_ENV
          echo "PATCH=$PATCH" >> $GITHUB_ENV

      - name: Update csproj version
        run: |
          dotnet msbuild ./src/$PROJECT_NAME/$PROJECT_NAME.csproj \
            /t:UpdateVersion /p:Version=$PACKAGE_VERSION

      - name: Pack NuGet package
        run: |
          dotnet pack ./src/$PROJECT_NAME/$PROJECT_NAME.csproj \
            -c Release -o ./nupkg /p:PackageVersion=$PACKAGE_VERSION

      - name: Push to NuGet
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json

      - name: Create GitHub Release for major/minor
        if: steps.extract.outputs.PATCH == '0'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ env.PACKAGE_VERSION }} - ${{ env.PROJECT_NAME }}
          body: "Automatic release for ${{ env.PROJECT_NAME }} version ${{ env.PACKAGE_VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
